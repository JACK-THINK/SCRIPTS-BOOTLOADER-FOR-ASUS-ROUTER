#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/xray"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
########## END ##########
#
#
########## LOAD FUNCTIONS ##########
#
doubleCheckAndConfirm()
{
    while [ 1 ]
    do
        local VALUE_1
        local VALUE_2
        #
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE: "
        read VALUE_1
        /opt/bin/echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: INPUT THE VALUE AGAIN TO CONFIRM: "
        read VALUE_2
        #
        if [ "${VALUE_1}" == "${VALUE_2}" ]
        then
            eval ${1}="${VALUE_1}"
            break
        else
            /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: THE TWO VALUES ARE INCONSISTENT"
        fi
    done
}
#
########## END ##########
#
#
########## SET PARAMETERS ##########
#
case ${#} in
    0)
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mUPSTREAM DNS IP\033[0m: IP address of upstream DNS server"
        doubleCheckAndConfirm UPSTREAM_DNS_IP
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mINBOUND VMESS ID\033[0m: vmess ID used to connect router from Internet"
        doubleCheckAndConfirm INBOUND_VMESS_ID
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mSERVER ADDRESS\033[0m: IP address or domain name of remote xray server"
        doubleCheckAndConfirm IP_OR_DOMAIN_OF_XRAY_SERVER
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mOUTBOUND VLESS ID\033[0m: vless ID used to connect remote xray server"
        doubleCheckAndConfirm OUTBOUND_VLESS_ID
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mREALITY PUBLIC KEY\033[0m: outbound vless reality public key"
        doubleCheckAndConfirm OUTBOUND_VLESS_REALITY_PUBLIC_KEY
        ;;
    *)
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: WRONG NUMBER OF PARAMETERS"
        #
        exit 1
        ;;
esac
#
########## END ##########
#
#
########## CONFIGURE XRAY ##########
#
# Create ${PRIVATE_ETC}/config_proxy.json
# 创建${PRIVATE_ETC}/config_proxy.json
/opt/bin/cp -f "${PRIVATE_ETC}/config_proxy.json.template" "${PRIVATE_ETC}/config_proxy.json"
#
# Modify ${PRIVATE_ETC}/config_proxy.json
# 修改${PRIVATE_ETC}/config_proxy.json
/opt/bin/sed -E -i 's#<UPSTREAM_DNS_IP>#'"${UPSTREAM_DNS_IP}"'#' "${PRIVATE_ETC}/config_proxy.json"
/opt/bin/sed -E -i 's#<INBOUND_VMESS_ID>#'"${INBOUND_VMESS_ID}"'#' "${PRIVATE_ETC}/config_proxy.json"
/opt/bin/sed -E -i 's#<IP_OR_DOMAIN_OF_XRAY_SERVER>#'"${IP_OR_DOMAIN_OF_XRAY_SERVER}"'#' "${PRIVATE_ETC}/config_proxy.json"
/opt/bin/sed -E -i 's#<OUTBOUND_VLESS_ID>#'"${OUTBOUND_VLESS_ID}"'#' "${PRIVATE_ETC}/config_proxy.json"
/opt/bin/sed -E -i 's#<OUTBOUND_VLESS_REALITY_PUBLIC_KEY>#'"${OUTBOUND_VLESS_REALITY_PUBLIC_KEY}"'#' "${PRIVATE_ETC}/config_proxy.json"
#
exit 0
#
########## END ##########