#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="FW_XRAY_TRANSPARENT_PROXY"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="ENABLE"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/xray"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
# BOOTSTRAP_DNS_SERVER: DNS Server to resolve the domain of the XRAY-SERVER
# 设置自定义变量BOOTSTRAP_DNS_SERVER为解析XRAY-SERVER域名的DNS服务器
BOOTSTRAP_DNS_SERVER="119.29.29.29"
#
# SERVER_DOMAIN: Domain of the XRAY-SERVER
# 设置自定义变量SERVER_DOMAIN为XRAY-SERVER的域名
SERVER_DOMAIN="$(/opt/bin/sed -E -n -e '/outbounds/,/port/s/^[[:space:]]*\"address\":[[:space:]]*\"(.*)\".*/\1/p' "${PRIVATE_ETC}/config_proxy.json")"
#
# SERVER_IP: Domain of the XRAY-SERVER
# 设置自定义变量SERVER_IP为XRAY-SERVER的IP地址
SERVER_IP="$(nslookup "${SERVER_DOMAIN}" "${BOOTSTRAP_DNS_SERVER}" | /opt/bin/sed -E -n -e '/Name/,$s/.*:[[:space:]]+([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})($|[[:space:]]+.*)/\1/p' | /opt/bin/head -n 1)"
#
# ROUTING_MARK: Mark of PBR
# 设置自定义变量ROUTING_MARK为策略路由标记
ROUTING_MARK="0x2333"
#
# ROUTING_TABLE: Routing table of PBR
# 设置自定义变量ROUTING_TABLE为策略路由表
ROUTING_TABLE="100"
#
# NF_TPROXY_CORE: The path to nf_tproxy_core.ko
# 设置自定义变量NF_TPROXY_CORE为文件nf_tproxy_core.ko的绝对路径
NF_TPROXY_CORE="$(/opt/bin/find /lib/modules/ -iname "nf_tproxy_core.ko")"
#
# XT_TPROXY: The path to xt_TPROXY.ko
# 设置自定义变量XT_TPROXY为文件xt_TPROXY.ko的绝对路径
XT_TPROXY="$(/opt/bin/find /lib/modules/ -iname "xt_TPROXY.ko")"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ---------*"
#
########## END ##########
#
#
########## SET TRANSPARENT PROXY ##########
#
# Check if TProxy modules exist
# 检查TProxy模块是否存在
if [ -n "${NF_TPROXY_CORE}" ] && [ -n "${XT_TPROXY}" ]
then
    # LOCAL_TPROXY_PORT: Port of the XRAY-DOKODEMO-DOOR
    # 设置自定义变量LOCAL_TPROXY_PORT为XRAY-DOKODEMO-DOOR的接收端口
    LOCAL_TPROXY_PORT="55155"
    #
    # USER_DEFINED_CHAIN_NAME: Name of the user-defined chain
    # 设置自定义变量USER_DEFINED_CHAIN_NAME为防火墙自定义链名
    USER_DEFINED_CHAIN_NAME="XRAY_TPROXY"
    #
    # Enable TPROXY
    # 启用TPROXY
    insmod "${NF_TPROXY_CORE}"
    insmod "${XT_TPROXY}"
    #
    # Set rules
    # 设置规则
    ip rule add fwmark "${ROUTING_MARK}" table "${ROUTING_TABLE}"
    ip route add local 0.0.0.0/0 dev lo table "${ROUTING_TABLE}"
    #
    iptables -t mangle -N "${USER_DEFINED_CHAIN_NAME}"
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "0.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "10.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "127.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "169.254.0.0/16" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "172.16.0.0/12" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "192.168.0.0/16" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "224.0.0.0/4" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -d "240.0.0.0/4" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -p tcp -j TPROXY --on-port "${LOCAL_TPROXY_PORT}" --tproxy-mark "${ROUTING_MARK}"
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}" -p udp -j TPROXY --on-port "${LOCAL_TPROXY_PORT}" --tproxy-mark "${ROUTING_MARK}"
    iptables -t mangle -A PREROUTING -j "${USER_DEFINED_CHAIN_NAME}"
    #
    iptables -t mangle -N "${USER_DEFINED_CHAIN_NAME}"_MASK
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "0.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "10.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "127.0.0.0/8" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "169.254.0.0/16" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "172.16.0.0/12" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "192.168.0.0/16" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "224.0.0.0/4" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "240.0.0.0/4" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -d "${SERVER_IP}/32" -j RETURN
    iptables -t mangle -A "${USER_DEFINED_CHAIN_NAME}"_MASK -j MARK --set-mark "${ROUTING_MARK}"
    iptables -t mangle -A OUTPUT -p tcp -j "${USER_DEFINED_CHAIN_NAME}"_MASK
    iptables -t mangle -A OUTPUT -p udp -j "${USER_DEFINED_CHAIN_NAME}"_MASK
    #
    # Configure DNS
    # 配置DNS
    /opt/bin/mv -f "/tmp/resolv.dnsmasq" "/tmp/resolv.dnsmasq.bak"
    /opt/bin/cp -lf "${PRIVATE_ETC}/dnsmasq.d/xray_dns_tproxy.conf" "${ENTWARE_DNSMASQD}"
    /opt/bin/dnsmasq.d_refresh > /dev/null 2>&1
else
    # LOCAL_REDIRECT_PORT: Port of the XRAY-DOKODEMO-DOOR
    # 设置自定义变量LOCAL_REDIRECT_PORT为XRAY-DOKODEMO-DOOR的接收端口
    LOCAL_REDIRECT_PORT="45154"
    #
    # USER_DEFINED_CHAIN_NAME: Name of the user-defined chain
    # 设置自定义变量USER_DEFINED_CHAIN_NAME为防火墙自定义链名
    USER_DEFINED_CHAIN_NAME="XRAY_REDIRECT"
    #
    # Set rules
    # 设置规则
    iptables -t nat -N "${USER_DEFINED_CHAIN_NAME}"
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "${SERVER_IP}" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "0.0.0.0/8" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "10.0.0.0/8" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "127.0.0.0/8" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "169.254.0.0/16" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "172.16.0.0/12" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "192.168.0.0/16" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "224.0.0.0/4" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -d "240.0.0.0/4" -j RETURN
    iptables -t nat -A "${USER_DEFINED_CHAIN_NAME}" -p tcp -j REDIRECT --to-ports "${LOCAL_REDIRECT_PORT}"
    iptables -t nat -A PREROUTING -p tcp -j "${USER_DEFINED_CHAIN_NAME}"
    #
    # Configure DNS
    # 配置DNS
    /opt/bin/mv -f "/tmp/resolv.dnsmasq" "/tmp/resolv.dnsmasq.bak"
    /opt/bin/cp -lf "${PRIVATE_ETC}/dnsmasq.d/xray_dns_redirect.conf" "${ENTWARE_DNSMASQD}"
    /opt/bin/dnsmasq.d_refresh > /dev/null 2>&1
fi
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
#
exit 0
#
########## END ##########