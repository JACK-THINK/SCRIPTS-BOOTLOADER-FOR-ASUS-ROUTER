#!/bin/sh
#
########## CHECK ASUS ROUTER MODEL ##########
#
ROUTER_MODEL="$(nvram get model)"
#
########## END ##########
#
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="DNSMASQ.D"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="INSTALL"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_BIN: The directory which contains all the common executable files installed by Entware
# 设置自定义变量ENTWARE_BIN为Entware安装的普通可执行文件目录
ENTWARE_BIN="${USB_MOUNT_POINT}/bin"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_MONITD: The directory which contains all the configuration files used by monit
# 设置自定义变量ENTWARE_MONITD为monit配置文件目录
ENTWARE_MONITD="${ENTWARE_ETC}/monit.d"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/dnsmasq.d"
#
# PRIVATE_BIN: The directory which contains all the executable files related to this program
# 设置自定义变量PRIVATE_BIN为此程序可执行文件目录
PRIVATE_BIN="${PRIVATE_ROOT}/bin"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
# FMW_DNSMASQ_CONF: The file /etc/dnsmasq.conf from firmware
# 设置自定义变量FMW_DNSMASQ_CONF为固件内/etc/dnsmasq.conf
FMW_DNSMASQ_CONF="/etc/dnsmasq.conf"
#
# LOCAL_DOMAIN: The local-only domain
# 设置自定义变量LOCAL_DOMAIN为本地专用域名
LOCAL_DOMAIN="$(/opt/bin/sed -E -n -e 's/^domain=([^,]+),?.*/\1/p' ${FMW_DNSMASQ_CONF})"
if [ -z "${LOCAL_DOMAIN}" ]
then
    LOCAL_DOMAIN="lan"
fi
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ON ${ROUTER_MODEL} ---------*"
#
########## END ##########
#
#
########## INSTALL DNSMASQ ##########
#
# Check if ENTWARE_ENABLE SERVICE has been loaded
# 检查ENTWARE_ENABLE SERVICE是否已启用
if [ "$(which opkg)" == "/opt/bin/opkg" ]
then
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ENTWARE_ENABLE SERVICE HAS BEEN LOADED"
    #
    # Check if MONIT MANAGEMENT SYSTEM is enabled
    # 检查MONIT MANAGEMENT SYSTEM是否已启用
    if [ "$(which monit)" == "/opt/bin/monit" ]
    then
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: MONIT MANAGEMENT SYSTEM HAS BEEN DEPLOYED"
        #
        # Check if ${ENTWARE_DNSMASQD} exists
        # 检查目录${ENTWARE_DNSMASQD}是否存在
        if [ -d "${ENTWARE_DNSMASQD}" ]
        then
            # Remove previous backup
            # 删除旧备份
            /opt/bin/rm -rf "${ENTWARE_DNSMASQD}.bak"
            #
            # Back up previous edition
            # 备份旧版本
            /opt/bin/mv -f "${ENTWARE_DNSMASQD}" "${ENTWARE_DNSMASQD}.bak"
        fi
        #
        # Check if ${PRIVATE_ETC}/dnsmasq.d exists
        # 检查目录${PRIVATE_ETC}/dnsmasq.d是否存在
        if [ -d "${PRIVATE_ETC}/dnsmasq.d" ]
        then
            # Copy ${PRIVATE_ETC}/dnsmasq.d to ${ENTWARE_DNSMASQD}
            # 复制目录${PRIVATE_ETC}/dnsmasq.d至目录${ENTWARE_DNSMASQD}
            /opt/bin/cp -rf "${PRIVATE_ETC}/dnsmasq.d" "${ENTWARE_DNSMASQD}"
            #
        else
            # Create ${ENTWARE_DNSMASQD}
            # 创建目录${ENTWARE_DNSMASQD}
            /opt/bin/mkdir "${ENTWARE_DNSMASQD}"
        fi
        #
        # Check if ${ENTWARE_DNSMASQD}/dnsmasq_extended.conf exists
        # 检查文件${ENTWARE_DNSMASQD}/dnsmasq_extended.conf是否存在
        if [ ! -e "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf" ]
        then
            # Create ${ENTWARE_DNSMASQD}/dnsmasq_extended.conf
            # 如果文件${ENTWARE_DNSMASQD}/dnsmasq_extended.conf不存在，则执行
            if [ -z "$(/opt/bin/grep -e '^domain-needed' "${FMW_DNSMASQ_CONF}")" ]
            then
                /opt/bin/echo "domain-needed" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
            if [ -z "$(/opt/bin/grep -e '^bogus-priv' "${FMW_DNSMASQ_CONF}")" ]
            then
                /opt/bin/echo "bogus-priv" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
            if [ -z "$(/opt/bin/grep -e '^local=/'"${LOCAL_DOMAIN}"'/' "${FMW_DNSMASQ_CONF}")" ]
            then
                /opt/bin/echo "local=/${LOCAL_DOMAIN}/" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
            /opt/bin/echo "addn-hosts=\"${ENTWARE_DNSMASQD}/hosts.dnsmasq\"" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            #
            if [ -z "$(/opt/bin/grep -e '^expand-hosts' "${FMW_DNSMASQ_CONF}")" ]
            then
                /opt/bin/echo "expand-hosts" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
            if [ -z "$(/opt/bin/grep -e '^domain=' "${FMW_DNSMASQ_CONF}")" ]
            then
                /opt/bin/echo "domain=${LOCAL_DOMAIN}" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
            DHCP_OPTION_DNS_NUM="$(/opt/bin/sed -E -n -e 's/^dhcp-option=[[:space:][:alnum:]_-]*,*15[[:space:]]*,[[:space:]]*([[:alnum:]_-]*)[[:space:]]*$/\1/p' "${FMW_DNSMASQ_CONF}")"
            DHCP_OPTION_DNS_SYM="$(/opt/bin/sed -E -n -e 's/^dhcp-option=.*option[[:space:]]*:[[:space:]]*domain-name[[:space:]]*,[[:space:]]*([[:alnum:]_-]*)[[:space:]]*[[:punct:]]*.*$/\1/p' "${FMW_DNSMASQ_CONF}")"
            if [ -z "${DHCP_OPTION_DNS_NUM}" ] && [ -z "${DHCP_OPTION_DNS_SYM}" ]
            then
                /opt/bin/echo "dhcp-option=15,${LOCAL_DOMAIN}" >> "${ENTWARE_DNSMASQD}/dnsmasq_extended.conf"
            fi
            #
        fi
        #
        # Check if ${ENTWARE_DNSMASQD}/hosts.dnsmasq exists
        # 检查文件${ENTWARE_DNSMASQD}/hosts.dnsmasq是否存在
        if [ ! -e "${ENTWARE_DNSMASQD}/hosts.dnsmasq" ]
        then
            # Create ${ENTWARE_DNSMASQD}/hosts.dnsmasq
            # 如果文件${ENTWARE_DNSMASQD}/hosts.dnsmasq不存在，则执行
            /opt/bin/echo -e "$(nvram get lan_ipaddr) ${ROUTER_MODEL}" > "${ENTWARE_DNSMASQD}/hosts.dnsmasq"
        fi
        #
        /opt/bin/cp -f "${PRIVATE_BIN}/dnsmasq.d_enable.service" "${ENTWARE_BIN}/dnsmasq.d_refresh"
        #
        # Configure monit
        # 配置monit
        /opt/bin/cp -f "${PRIVATE_ETC}/monit.d/dnsmasq.d" "${ENTWARE_MONITD}"
        /opt/bin/chmod 600 "${ENTWARE_MONITD}/dnsmasq.d"
        /opt/bin/mv -f "${ENTWARE_MONITD}/dnsmasq.d" "${ENTWARE_MONITD}/dnsmasq.d.on"
        /opt/bin/monit reload
        #
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
        #
        exit 0
        #
    else
        # Do nothing but prompt the user
        # 如果MONIT MANAGEMENT SYSTEM未部署，则执行
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: MONIT MANAGEMENT SYSTEM HAS NOT BEEN DEPLOYED"
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: PLEASE DEPLOY MONIT MANAGEMENT SYSTEM FIRST"
        /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
        #
        exit 2
    fi
    #
else
    # Do nothing but prompt the user
    # 如果ENTWARE_ENABLE SERVICE未启用，则执行
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: ENTWARE_ENABLE SERVICE HAS NOT BEEN LOADED"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: PLEASE ENABLE ENTWARE FIRST"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 1
fi
#
########## END ##########