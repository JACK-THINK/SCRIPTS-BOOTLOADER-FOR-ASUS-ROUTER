#!/bin/sh
#
########## SET THE CUSTOM VARIABLES ##########
#
# 设置自定义变量
# 当该程序运行结束，此处设置的变量自动取消
#
# NAME OF THE SERVICE
# 服务名称
SERVICE_NAME="OVERTURE"
#
# FUNCTION OF THE SERVICE
# 服务功能
SERVICE_FUNCTION="ENABLE"
#
# USB_MOUNT_POINT: The mount point of the USB flash drive
# 设置自定义变量USB_MOUNT_POINT为U盘挂载点
USB_MOUNT_POINT="$(nvram get script_usbmount | /opt/bin/sed 's/\/script_bootloader.*//')"
#
# SBL_SYS_USR: The directory which contains all the external software resources (add-ons) related to SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER
# 设置自定义变量SBL_SYS_USR为SCRIPTS-BOOTLOADER-FOR-ASUS-ROUTER系统外部软件资源目录，即插件目录
SBL_SYS_USR="${USB_MOUNT_POINT}/script_bootloader/usr"
#
# ENTWARE_ETC: The directory which contains all the configuration files installed by Entware
# 设置自定义变量ENTWARE_ETC为Entware安装的配置文件目录
ENTWARE_ETC="${USB_MOUNT_POINT}/etc"
#
# ENTWARE_DNSMASQD: The directory which contains all the configuration files used by dnsmasq
# 设置自定义变量ENTWARE_DNSMASQD为dnsmasq配置文件目录
ENTWARE_DNSMASQD="${ENTWARE_ETC}/dnsmasq.d"
#
# PRIVATE_ROOT: The root directory for this program
# 设置自定义变量PRIVATE_ROOT为此程序根目录
PRIVATE_ROOT="${SBL_SYS_USR}/overture"
#
# PRIVATE_ETC: The directory which contains all the configuration files related to this program
# 设置自定义变量PRIVATE_ETC为此程序配置文件目录
PRIVATE_ETC="${PRIVATE_ROOT}/etc"
#
# PRIVATE_USR: The directory which contains all the external software resources related to this program
# 设置自定义变量PRIVATE_USR为此程序外部软件资源目录
PRIVATE_USR="${PRIVATE_ROOT}/usr"
#
# OVERTURE_PID_FILE: The path to overture.pid
# 设置自定义变量OVERTURE_PID_FILE为文件overture.pid的绝对路径
OVERTURE_PID_FILE="/var/run/overture.pid"
#
########## END ##########
#
#
########## NOTIFICATION ##########
#
/opt/bin/echo -e "($(basename $0)): $$ *--------- ${SERVICE_FUNCTION} ${SERVICE_NAME} ---------*"
#
########## END ##########
#
#
########## CHECK AND ENABLE OVERTURE ##########
#
# Check if ${PRIVATE_USR}/overture, ${PRIVATE_ETC}/config.json and ${PRIVATE_ETC}/dnsmasq.d/overture.conf exist
# 检查文件${PRIVATE_USR}/overture，${PRIVATE_ETC}/config.json和${PRIVATE_ETC}/dnsmasq.d/overture.conf是否存在
if [ -e "${PRIVATE_USR}/overture" ] && \
[ -e "${PRIVATE_ETC}/config.json" ] && \
[ -e "${PRIVATE_ETC}/dnsmasq.d/overture.conf" ]
then
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ALL THE PREREQUISITES ARE MET"
    #
    # Load ${PRIVATE_USR}/overture
    # 如果文件${PRIVATE_USR}/overture，${PRIVATE_ETC}/config.json和${PRIVATE_ETC}/dnsmasq.d/overture.conf存在，则执行
    /opt/bin/nohup "${PRIVATE_USR}/overture" -c "${PRIVATE_ETC}/config.json" &> /dev/null &
    /opt/bin/sleep 10
    PID="$(pidof overture)"
    /opt/bin/echo "${PID}" > "${OVERTURE_PID_FILE}"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    # Update DNS server
    # 更新DNS服务器
    /opt/bin/mv -f "/tmp/resolv.dnsmasq" "/tmp/resolv.dnsmasq.bak"
    /opt/bin/cp -lf "${PRIVATE_ETC}/dnsmasq.d/overture.conf" "${ENTWARE_DNSMASQD}"
    /opt/bin/dnsmasq.d_refresh > /dev/null 2>&1
    #
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;42;37mSUCCESS\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 0
    #
else
    # Do nothing but prompt the user
    # 如果文件${PRIVATE_USR}/overture，${PRIVATE_ETC}/config.json或${PRIVATE_ETC}/dnsmasq.d/overture.conf不存在，则执行
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;43;31mNOTICE\033[0m: NOT ALL THE PREREQUISITES ARE MET"
    /opt/bin/echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: ${SERVICE_FUNCTION} ${SERVICE_NAME}"
    #
    exit 1
fi
#
########## END ##########